- table:
    schema: auth
    name: account_providers
  object_relationships:
    - name: account
      using:
        foreign_key_constraint_on: account_id
    - name: provider
      using:
        foreign_key_constraint_on: auth_provider
- table:
    schema: auth
    name: account_roles
  object_relationships:
    - name: account
      using:
        foreign_key_constraint_on: account_id
    - name: roleByRole
      using:
        foreign_key_constraint_on: role
- table:
    schema: auth
    name: accounts
  object_relationships:
    - name: role
      using:
        foreign_key_constraint_on: default_role
    - name: user
      using:
        foreign_key_constraint_on: user_id
  array_relationships:
    - name: account_providers
      using:
        foreign_key_constraint_on:
          column: account_id
          table:
            schema: auth
            name: account_providers
    - name: account_roles
      using:
        foreign_key_constraint_on:
          column: account_id
          table:
            schema: auth
            name: account_roles
    - name: refresh_tokens
      using:
        foreign_key_constraint_on:
          column: account_id
          table:
            schema: auth
            name: refresh_tokens
- table:
    schema: auth
    name: providers
  array_relationships:
    - name: account_providers
      using:
        foreign_key_constraint_on:
          column: auth_provider
          table:
            schema: auth
            name: account_providers
- table:
    schema: auth
    name: refresh_tokens
  object_relationships:
    - name: account
      using:
        foreign_key_constraint_on: account_id
- table:
    schema: auth
    name: roles
  array_relationships:
    - name: account_roles
      using:
        foreign_key_constraint_on:
          column: role
          table:
            schema: auth
            name: account_roles
    - name: accounts
      using:
        foreign_key_constraint_on:
          column: default_role
          table:
            schema: auth
            name: accounts
- table:
    schema: public
    name: users
  object_relationships:
    - name: account
      using:
        manual_configuration:
          remote_table:
            schema: auth
            name: accounts
          column_mapping:
            id: user_id
  array_relationships:
    - name: tournaments_hosted
      using:
        foreign_key_constraint_on:
          column: owner_id
          table:
            schema: tournaments
            name: tournament
    - name: tournaments_participated
      using:
        foreign_key_constraint_on:
          column: user_id
          table:
            schema: tournaments
            name: tournament_participants
  select_permissions:
    - role: user
      permission:
        columns:
          - id
          - created_at
          - updated_at
          - display_name
          - avatar_url
        filter: {}
  update_permissions:
    - role: user
      permission:
        columns:
          - avatar_url
          - display_name
        filter:
          id:
            _eq: X-Hasura-User-Id
        check: null
- table:
    schema: tournaments
    name: tournament
  object_relationships:
    - name: owner
      using:
        manual_configuration:
          remote_table:
            schema: public
            name: users
          column_mapping:
            owner_id: id
  array_relationships:
    - name: participants
      using:
        foreign_key_constraint_on:
          column: tournament_id
          table:
            schema: tournaments
            name: tournament_participants
  insert_permissions:
    - role: user
      permission:
        check: {}
        columns:
          - start_date
          - entry_fee
          - participants_limit
          - description
          - status
          - title
          - type
          - id
          - owner_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - start_date
          - entry_fee
          - participants_limit
          - description
          - status
          - title
          - type
          - id
          - owner_id
        filter: {}
  update_permissions:
    - role: user
      permission:
        columns:
          - start_date
          - entry_fee
          - participants_limit
          - description
          - status
          - title
          - type
          - id
          - owner_id
        filter: {}
        check: {}
  delete_permissions:
    - role: user
      permission:
        filter: {}
- table:
    schema: tournaments
    name: tournament_participants
  object_relationships:
    - name: tournament
      using:
        foreign_key_constraint_on: tournament_id
    - name: user
      using:
        foreign_key_constraint_on: user_id
  insert_permissions:
    - role: user
      permission:
        check:
          user_id:
            _eq: X-Hasura-User-Id
        set:
          user_id: x-hasura-User-Id
        columns:
          - tournament_id
        backend_only: false
  select_permissions:
    - role: user
      permission:
        columns:
          - tournament_id
          - user_id
          - place
        filter: {}
        allow_aggregations: true
  delete_permissions:
    - role: user
      permission:
        filter:
          user_id:
            _eq: X-Hasura-User-Id
- table:
    schema: tournaments
    name: tournament_status_enum
  is_enum: true
- table:
    schema: tournaments
    name: tournament_type_enum
  is_enum: true
